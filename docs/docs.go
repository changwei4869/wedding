// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "zang",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin": {
            "get": {
                "description": "列出所有管理员",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "列出所有管理员",
                "responses": {
                    "200": {
                        "description": "成功获取所有管理员",
                        "schema": {
                            "$ref": "#/definitions/response.PageResp"
                        }
                    }
                }
            },
            "put": {
                "description": "编辑管理员",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "编辑管理员",
                "parameters": [
                    {
                        "description": "Admin 信息",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AdminEditReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功编辑管理员",
                        "schema": {
                            "$ref": "#/definitions/model.AdminEditReq"
                        }
                    }
                }
            },
            "post": {
                "description": "添加新管理员",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "添加新管理员",
                "parameters": [
                    {
                        "description": "Admin 信息",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AdminAddReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "成功添加管理员",
                        "schema": {
                            "$ref": "#/definitions/model.AdminAddReq"
                        }
                    }
                }
            }
        },
        "/admin/:id": {
            "delete": {
                "description": "删除指定id的管理员",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "删除指定id的管理员",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功删除管理员",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "description": "管理员登陆",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "管理员登陆",
                "parameters": [
                    {
                        "description": "Admin 信息",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AdminLoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "管理员成功登陆",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "健康检查",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "健康检查",
                "responses": {
                    "200": {
                        "description": "健康检查成功",
                        "schema": {
                            "$ref": "#/definitions/model.HealthResp"
                        }
                    }
                }
            }
        },
        "/permissions": {
            "get": {
                "description": "展示数据库中权限表中的所有权限",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permission"
                ],
                "summary": "展示所有权限",
                "responses": {
                    "200": {
                        "description": "成功获取权限列表",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PermissionsListReq"
                            }
                        }
                    },
                    "500": {
                        "description": "内部服务器错误",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/qrcode": {
            "put": {
                "description": "编辑二维码",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qrcode"
                ],
                "summary": "编辑二维码",
                "parameters": [
                    {
                        "description": "Qrcode 信息",
                        "name": "qrcode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.QrCodesEditReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功编辑二维码",
                        "schema": {
                            "$ref": "#/definitions/model.QrCodesEditReq"
                        }
                    }
                }
            },
            "post": {
                "description": "添加新二维码",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qrcode"
                ],
                "summary": "添加新二维码",
                "parameters": [
                    {
                        "description": "QrCode 信息",
                        "name": "qrcode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.QrCodesAddReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "成功添加二维码",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/qrcodes": {
            "get": {
                "description": "列出所有二维码",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qrcode"
                ],
                "summary": "列出所有二维码",
                "responses": {
                    "200": {
                        "description": "成功获取所有二维码",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.QrCodes"
                            }
                        }
                    }
                }
            }
        },
        "/registration": {
            "get": {
                "description": "status 和 location放在quaty param中",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "registrations"
                ],
                "summary": "Get registrations based on status and location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Status of the registration",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Location of the registration",
                        "name": "location",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.RegistrationsResp"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "get registration from db error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "编辑registration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "registrations"
                ],
                "summary": "编辑registration",
                "parameters": [
                    {
                        "description": "Registration 信息",
                        "name": "registration",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegistrationsEditReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功编辑registration",
                        "schema": {
                            "$ref": "#/definitions/model.RegistrationsEditReq"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new registration entry with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "registrations"
                ],
                "summary": "Create a new registration",
                "parameters": [
                    {
                        "description": "Registration data",
                        "name": "registration",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Registrations"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Registrations"
                        }
                    },
                    "400": {
                        "description": "get registration req error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "create registration to db error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "批量删除提供的所有注册信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "registrations"
                ],
                "summary": "批量删除注册信息",
                "parameters": [
                    {
                        "description": "需要删除的注册信息ID列表",
                        "name": "delReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegistrationsDelBatchReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功删除所有选中注册信息",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/registration/:id": {
            "delete": {
                "description": "删除指定id的registration",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "registrations"
                ],
                "summary": "删除指定id的registration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功删除registration",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/registration/checkregistration": {
            "post": {
                "description": "通过审核status值设为1，拒绝设为2。待审核为0",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "registrations"
                ],
                "summary": "Check registration",
                "parameters": [
                    {
                        "description": "Registration ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Reason for approval or rejection",
                        "name": "reason",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RegistrationsCheckResp"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to update registration status",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/registrations": {
            "get": {
                "description": "获取数据库中所有注册信息记录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "registrations"
                ],
                "summary": "获取所有注册信息",
                "responses": {
                    "200": {
                        "description": "成功获取所有注册信息",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.RegistrationsResp"
                            }
                        }
                    }
                }
            }
        },
        "/role": {
            "get": {
                "description": "列出所有角色",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "列出所有角色",
                "responses": {
                    "200": {
                        "description": "成功获取所有角色",
                        "schema": {
                            "$ref": "#/definitions/response.PageResp"
                        }
                    }
                }
            },
            "put": {
                "description": "编辑角色",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "编辑角色",
                "parameters": [
                    {
                        "description": "Role 信息",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RolesEditReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功编辑角色",
                        "schema": {
                            "$ref": "#/definitions/model.RolesEditReq"
                        }
                    }
                }
            },
            "post": {
                "description": "添加新角色",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "添加新角色",
                "parameters": [
                    {
                        "description": "Role 信息",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RolesAddReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "成功添加角色",
                        "schema": {
                            "$ref": "#/definitions/model.RolesAddReq"
                        }
                    }
                }
            }
        },
        "/role/:id": {
            "delete": {
                "description": "删除指定id的角色",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "role"
                ],
                "summary": "删除指定id的角色",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功删除角色",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/site": {
            "get": {
                "description": "从数据库中获取所有站点记录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "site"
                ],
                "summary": "获取所有站点",
                "responses": {
                    "200": {
                        "description": "成功获取所有站点",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SitesResp"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "编辑site",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "site"
                ],
                "summary": "编辑site",
                "parameters": [
                    {
                        "description": "Site 信息",
                        "name": "site",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SitesEditReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功编辑site",
                        "schema": {
                            "$ref": "#/definitions/model.SitesEditReq"
                        }
                    }
                }
            },
            "post": {
                "description": "添加新site",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "site"
                ],
                "summary": "添加新site",
                "parameters": [
                    {
                        "description": "Site 信息",
                        "name": "site",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SitesAddReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "成功添加site",
                        "schema": {
                            "$ref": "#/definitions/model.SitesAddReq"
                        }
                    }
                }
            }
        },
        "/site/:id": {
            "get": {
                "description": "根据id获取site",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "site"
                ],
                "summary": "根据id获取site",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功获取site",
                        "schema": {
                            "$ref": "#/definitions/model.SitesResp"
                        }
                    }
                }
            },
            "delete": {
                "description": "删除指定id的site",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "site"
                ],
                "summary": "删除指定id的site。",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功删除site",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tag": {
            "get": {
                "description": "获取数据库中所有标签记录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "summary": "获取所有标签",
                "responses": {
                    "200": {
                        "description": "成功获取所有标签",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TagsResp"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "编辑tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "summary": "编辑tag",
                "parameters": [
                    {
                        "description": "Tag 信息",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TagsEditReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功编辑tag",
                        "schema": {
                            "$ref": "#/definitions/model.TagsEditReq"
                        }
                    }
                }
            },
            "post": {
                "description": "添加新tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "summary": "添加新tag",
                "parameters": [
                    {
                        "description": "Tag 信息",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TagsAddReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "成功添加tag",
                        "schema": {
                            "$ref": "#/definitions/model.TagsAddReq"
                        }
                    }
                }
            }
        },
        "/tag/:id": {
            "get": {
                "description": "根据id获取tag",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tag"
                ],
                "summary": "根据id获取tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功获取tag",
                        "schema": {
                            "$ref": "#/definitions/model.TagsResp"
                        }
                    }
                }
            },
            "delete": {
                "description": "删除指定id的tag",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "tag"
                ],
                "summary": "删除指定id的tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功删除tag",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AdminAddReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "model.AdminEditReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.AdminLoginReq": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "model.HealthResp": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "model.PermissionsListReq": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.QrCodes": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "qr_code": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.QrCodesAddReq": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string"
                },
                "qr_code": {
                    "type": "string"
                }
            }
        },
        "model.QrCodesEditReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "qr_code": {
                    "type": "string"
                }
            }
        },
        "model.Registrations": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "annual_income": {
                    "type": "string"
                },
                "asset_status": {
                    "type": "string"
                },
                "bride_price": {
                    "type": "string"
                },
                "channel": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "distance": {
                    "type": "string"
                },
                "education": {
                    "type": "string"
                },
                "expect_help": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "live_together": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "looking_for": {
                    "type": "string"
                },
                "marriage_certificate": {
                    "type": "string"
                },
                "marriage_history": {
                    "type": "string"
                },
                "married_life": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "need_child": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profession": {
                    "type": "string"
                },
                "qualifications": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "registrationscol": {
                    "type": "string"
                },
                "residence": {
                    "type": "string"
                },
                "self_description": {
                    "type": "string"
                },
                "sexual_orientation": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "wechat": {
                    "type": "string"
                },
                "wedding_mode": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "model.RegistrationsCheckResp": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "model.RegistrationsDelBatchReq": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "description": "主键列表",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.RegistrationsEditReq": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "annual_income": {
                    "type": "string"
                },
                "asset_status": {
                    "type": "string"
                },
                "bride_price": {
                    "type": "string"
                },
                "channel": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "distance": {
                    "type": "string"
                },
                "education": {
                    "type": "string"
                },
                "expect_help": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "live_together": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "looking_for": {
                    "type": "string"
                },
                "marriage_certificate": {
                    "type": "string"
                },
                "marriage_history": {
                    "type": "string"
                },
                "married_life": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "need_child": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profession": {
                    "type": "string"
                },
                "qualifications": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "registrationscol": {
                    "type": "string"
                },
                "residence": {
                    "type": "string"
                },
                "self_description": {
                    "type": "string"
                },
                "sexual_orientation": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "wechat": {
                    "type": "string"
                },
                "wedding_mode": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "model.RegistrationsResp": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "annual_income": {
                    "type": "string"
                },
                "asset_status": {
                    "type": "string"
                },
                "bride_price": {
                    "type": "string"
                },
                "channel": {
                    "type": "string"
                },
                "distance": {
                    "type": "string"
                },
                "education": {
                    "type": "string"
                },
                "expect_help": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "live_together": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "looking_for": {
                    "type": "string"
                },
                "marriage_certificate": {
                    "type": "string"
                },
                "marriage_history": {
                    "type": "string"
                },
                "married_life": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "need_child": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profession": {
                    "type": "string"
                },
                "qualifications": {
                    "type": "string"
                },
                "registrationscol": {
                    "type": "string"
                },
                "residence": {
                    "type": "string"
                },
                "self_description": {
                    "type": "string"
                },
                "sexual_orientation": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "wechat": {
                    "type": "string"
                },
                "wedding_mode": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "model.RolesAddReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permission_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.RolesEditReq": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "permission_ids": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.SitesAddReq": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "model.SitesEditReq": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "model.SitesResp": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "model.TagsAddReq": {
            "type": "object",
            "properties": {
                "gender": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.TagsEditReq": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.TagsResp": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "response.PageResp": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {},
                "pageNo": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8088",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
