basePath: /api
definitions:
  model.AdminAddReq:
    properties:
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      role_id:
        type: integer
      status:
        type: integer
    type: object
  model.AdminEditReq:
    properties:
      id:
        type: integer
      role_id:
        type: integer
      status:
        type: integer
      username:
        type: string
    type: object
  model.AdminLoginReq:
    properties:
      password:
        type: string
      phone:
        type: string
    type: object
  model.HealthResp:
    properties:
      status:
        type: string
    type: object
  model.PermissionsListReq:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  model.QrCodes:
    properties:
      created_at:
        type: string
      id:
        type: integer
      location:
        type: string
      qr_code:
        type: string
      updated_at:
        type: string
    type: object
  model.QrCodesAddReq:
    properties:
      location:
        type: string
      qr_code:
        type: string
    type: object
  model.QrCodesEditReq:
    properties:
      id:
        type: integer
      location:
        type: string
      qr_code:
        type: string
    type: object
  model.Registrations:
    properties:
      age:
        type: integer
      annual_income:
        type: string
      asset_status:
        type: string
      bride_price:
        type: string
      channel:
        type: string
      created_at:
        type: string
      distance:
        type: string
      education:
        type: string
      expect_help:
        type: string
      gender:
        type: integer
      height:
        type: integer
      id:
        type: integer
      live_together:
        type: string
      location:
        type: string
      looking_for:
        type: string
      marriage_certificate:
        type: string
      marriage_history:
        type: string
      married_life:
        type: string
      name:
        type: string
      need_child:
        type: string
      number:
        type: string
      phone:
        type: string
      profession:
        type: string
      qualifications:
        type: string
      reason:
        type: string
      registrationscol:
        type: string
      residence:
        type: string
      self_description:
        type: string
      sexual_orientation:
        type: string
      status:
        type: integer
      updated_at:
        type: string
      wechat:
        type: string
      wedding_mode:
        type: string
      weight:
        type: integer
    type: object
  model.RegistrationsCheckResp:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  model.RegistrationsDelBatchReq:
    properties:
      ids:
        description: 主键列表
        items:
          type: integer
        type: array
    required:
    - ids
    type: object
  model.RegistrationsEditReq:
    properties:
      age:
        type: integer
      annual_income:
        type: string
      asset_status:
        type: string
      bride_price:
        type: string
      channel:
        type: string
      created_at:
        type: string
      distance:
        type: string
      education:
        type: string
      expect_help:
        type: string
      gender:
        type: integer
      height:
        type: integer
      id:
        type: integer
      live_together:
        type: string
      location:
        type: string
      looking_for:
        type: string
      marriage_certificate:
        type: string
      marriage_history:
        type: string
      married_life:
        type: string
      name:
        type: string
      need_child:
        type: string
      number:
        type: string
      phone:
        type: string
      profession:
        type: string
      qualifications:
        type: string
      reason:
        type: string
      registrationscol:
        type: string
      residence:
        type: string
      self_description:
        type: string
      sexual_orientation:
        type: string
      status:
        type: integer
      updated_at:
        type: string
      wechat:
        type: string
      wedding_mode:
        type: string
      weight:
        type: integer
    type: object
  model.RegistrationsResp:
    properties:
      age:
        type: integer
      annual_income:
        type: string
      asset_status:
        type: string
      bride_price:
        type: string
      channel:
        type: string
      distance:
        type: string
      education:
        type: string
      expect_help:
        type: string
      gender:
        type: integer
      height:
        type: integer
      id:
        type: integer
      live_together:
        type: string
      location:
        type: string
      looking_for:
        type: string
      marriage_certificate:
        type: string
      marriage_history:
        type: string
      married_life:
        type: string
      name:
        type: string
      need_child:
        type: string
      number:
        type: string
      phone:
        type: string
      profession:
        type: string
      qualifications:
        type: string
      registrationscol:
        type: string
      residence:
        type: string
      self_description:
        type: string
      sexual_orientation:
        type: string
      status:
        type: integer
      wechat:
        type: string
      wedding_mode:
        type: string
      weight:
        type: integer
    type: object
  model.RolesAddReq:
    properties:
      description:
        type: string
      name:
        type: string
      permission_ids:
        items:
          type: integer
        type: array
    type: object
  model.RolesEditReq:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      permission_ids:
        type: string
      updated_at:
        type: string
    type: object
  model.SitesAddReq:
    properties:
      city:
        type: string
      status:
        type: integer
    type: object
  model.SitesEditReq:
    properties:
      city:
        type: string
      id:
        type: integer
      status:
        type: integer
    type: object
  model.SitesResp:
    properties:
      city:
        type: string
      id:
        type: integer
      status:
        type: integer
    type: object
  model.TagsAddReq:
    properties:
      gender:
        type: string
      name:
        type: string
    type: object
  model.TagsEditReq:
    properties:
      created_at:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  model.TagsResp:
    properties:
      created_at:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.PageResp:
    properties:
      count:
        type: integer
      data: {}
      pageNo:
        type: integer
      pageSize:
        type: integer
    type: object
host: localhost:8088
info:
  contact:
    email: support@swagger.io
    name: zang
    url: http://www.swagger.io/support
  description: This is a sample server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /admin:
    get:
      description: 列出所有管理员
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取所有管理员
          schema:
            $ref: '#/definitions/response.PageResp'
      summary: 列出所有管理员
      tags:
      - admin
    post:
      consumes:
      - application/json
      description: 添加新管理员
      parameters:
      - description: Admin 信息
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/model.AdminAddReq'
      produces:
      - application/json
      responses:
        "201":
          description: 成功添加管理员
          schema:
            $ref: '#/definitions/model.AdminAddReq'
      summary: 添加新管理员
      tags:
      - admin
    put:
      consumes:
      - application/json
      description: 编辑管理员
      parameters:
      - description: Admin 信息
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/model.AdminEditReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功编辑管理员
          schema:
            $ref: '#/definitions/model.AdminEditReq'
      summary: 编辑管理员
      tags:
      - admin
  /admin/:id:
    delete:
      description: 删除指定id的管理员
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 成功删除管理员
          schema:
            type: string
      summary: 删除指定id的管理员
      tags:
      - admin
  /admin/login:
    post:
      consumes:
      - application/json
      description: 管理员登陆
      parameters:
      - description: Admin 信息
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/model.AdminLoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: 管理员成功登陆
          schema:
            type: string
      summary: 管理员登陆
      tags:
      - admin
  /health:
    get:
      consumes:
      - application/json
      description: 健康检查
      produces:
      - application/json
      responses:
        "200":
          description: 健康检查成功
          schema:
            $ref: '#/definitions/model.HealthResp'
      summary: 健康检查
      tags:
      - health
  /permissions:
    get:
      description: 展示数据库中权限表中的所有权限
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取权限列表
          schema:
            items:
              $ref: '#/definitions/model.PermissionsListReq'
            type: array
        "500":
          description: 内部服务器错误
          schema:
            type: string
      summary: 展示所有权限
      tags:
      - permission
  /qrcode:
    post:
      consumes:
      - application/json
      description: 添加新二维码
      parameters:
      - description: QrCode 信息
        in: body
        name: qrcode
        required: true
        schema:
          $ref: '#/definitions/model.QrCodesAddReq'
      produces:
      - application/json
      responses:
        "201":
          description: 成功添加二维码
          schema:
            type: string
      summary: 添加新二维码
      tags:
      - qrcode
    put:
      consumes:
      - application/json
      description: 编辑二维码
      parameters:
      - description: Qrcode 信息
        in: body
        name: qrcode
        required: true
        schema:
          $ref: '#/definitions/model.QrCodesEditReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功编辑二维码
          schema:
            $ref: '#/definitions/model.QrCodesEditReq'
      summary: 编辑二维码
      tags:
      - qrcode
  /qrcodes:
    get:
      description: 列出所有二维码
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取所有二维码
          schema:
            items:
              $ref: '#/definitions/model.QrCodes'
            type: array
      summary: 列出所有二维码
      tags:
      - qrcode
  /registration:
    delete:
      consumes:
      - application/json
      description: 批量删除提供的所有注册信息
      parameters:
      - description: 需要删除的注册信息ID列表
        in: body
        name: delReq
        required: true
        schema:
          $ref: '#/definitions/model.RegistrationsDelBatchReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功删除所有选中注册信息
          schema:
            type: string
      summary: 批量删除注册信息
      tags:
      - registrations
    get:
      consumes:
      - application/json
      description: status 和 location放在quaty param中
      parameters:
      - description: Status of the registration
        in: query
        name: status
        type: integer
      - description: Location of the registration
        in: query
        name: location
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.RegistrationsResp'
            type: array
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "500":
          description: get registration from db error
          schema:
            type: string
      summary: Get registrations based on status and location
      tags:
      - registrations
    post:
      consumes:
      - application/json
      description: Create a new registration entry with the provided data
      parameters:
      - description: Registration data
        in: body
        name: registration
        required: true
        schema:
          $ref: '#/definitions/model.Registrations'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Registrations'
        "400":
          description: get registration req error
          schema:
            type: string
        "500":
          description: create registration to db error
          schema:
            type: string
      summary: Create a new registration
      tags:
      - registrations
    put:
      consumes:
      - application/json
      description: 编辑registration
      parameters:
      - description: Registration 信息
        in: body
        name: registration
        required: true
        schema:
          $ref: '#/definitions/model.RegistrationsEditReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功编辑registration
          schema:
            $ref: '#/definitions/model.RegistrationsEditReq'
      summary: 编辑registration
      tags:
      - registrations
  /registration/:id:
    delete:
      description: 删除指定id的registration
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 成功删除registration
          schema:
            type: string
      summary: 删除指定id的registration
      tags:
      - registrations
  /registration/checkregistration:
    post:
      consumes:
      - application/json
      description: 通过审核status值设为1，拒绝设为2。待审核为0
      parameters:
      - description: Registration ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      - description: Reason for approval or rejection
        in: body
        name: reason
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RegistrationsCheckResp'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "500":
          description: Failed to update registration status
          schema:
            type: string
      summary: Check registration
      tags:
      - registrations
  /registrations:
    get:
      consumes:
      - application/json
      description: 获取数据库中所有注册信息记录
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取所有注册信息
          schema:
            items:
              $ref: '#/definitions/model.RegistrationsResp'
            type: array
      summary: 获取所有注册信息
      tags:
      - registrations
  /role:
    get:
      description: 列出所有角色
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取所有角色
          schema:
            $ref: '#/definitions/response.PageResp'
      summary: 列出所有角色
      tags:
      - role
    post:
      consumes:
      - application/json
      description: 添加新角色
      parameters:
      - description: Role 信息
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RolesAddReq'
      produces:
      - application/json
      responses:
        "201":
          description: 成功添加角色
          schema:
            $ref: '#/definitions/model.RolesAddReq'
      summary: 添加新角色
      tags:
      - role
    put:
      consumes:
      - application/json
      description: 编辑角色
      parameters:
      - description: Role 信息
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RolesEditReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功编辑角色
          schema:
            $ref: '#/definitions/model.RolesEditReq'
      summary: 编辑角色
      tags:
      - role
  /role/:id:
    delete:
      description: 删除指定id的角色
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 成功删除角色
          schema:
            type: string
      summary: 删除指定id的角色
      tags:
      - role
  /site:
    get:
      consumes:
      - application/json
      description: 从数据库中获取所有站点记录
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取所有站点
          schema:
            items:
              $ref: '#/definitions/model.SitesResp'
            type: array
      summary: 获取所有站点
      tags:
      - site
    post:
      consumes:
      - application/json
      description: 添加新site
      parameters:
      - description: Site 信息
        in: body
        name: site
        required: true
        schema:
          $ref: '#/definitions/model.SitesAddReq'
      produces:
      - application/json
      responses:
        "201":
          description: 成功添加site
          schema:
            $ref: '#/definitions/model.SitesAddReq'
      summary: 添加新site
      tags:
      - site
    put:
      consumes:
      - application/json
      description: 编辑site
      parameters:
      - description: Site 信息
        in: body
        name: site
        required: true
        schema:
          $ref: '#/definitions/model.SitesEditReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功编辑site
          schema:
            $ref: '#/definitions/model.SitesEditReq'
      summary: 编辑site
      tags:
      - site
  /site/:id:
    delete:
      description: 删除指定id的site
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 成功删除site
          schema:
            type: string
      summary: 删除指定id的site。
      tags:
      - site
    get:
      description: 根据id获取site
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取site
          schema:
            $ref: '#/definitions/model.SitesResp'
      summary: 根据id获取site
      tags:
      - site
  /tag:
    get:
      consumes:
      - application/json
      description: 获取数据库中所有标签记录
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取所有标签
          schema:
            items:
              $ref: '#/definitions/model.TagsResp'
            type: array
      summary: 获取所有标签
      tags:
      - tag
    post:
      consumes:
      - application/json
      description: 添加新tag
      parameters:
      - description: Tag 信息
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/model.TagsAddReq'
      produces:
      - application/json
      responses:
        "201":
          description: 成功添加tag
          schema:
            $ref: '#/definitions/model.TagsAddReq'
      summary: 添加新tag
      tags:
      - tag
    put:
      consumes:
      - application/json
      description: 编辑tag
      parameters:
      - description: Tag 信息
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/model.TagsEditReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功编辑tag
          schema:
            $ref: '#/definitions/model.TagsEditReq'
      summary: 编辑tag
      tags:
      - tag
  /tag/:id:
    delete:
      description: 删除指定id的tag
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 成功删除tag
          schema:
            type: string
      summary: 删除指定id的tag
      tags:
      - tag
    get:
      description: 根据id获取tag
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取tag
          schema:
            $ref: '#/definitions/model.TagsResp'
      summary: 根据id获取tag
      tags:
      - tag
swagger: "2.0"
